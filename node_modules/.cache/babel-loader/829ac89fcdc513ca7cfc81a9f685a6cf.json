{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.addMessageToBotState = messages => {\n      if (Array.isArray(messages)) {\n        this.setState(state => ({ ...state,\n          messages: [...state.messages, ...messages]\n        }));\n      } else {\n        this.setState(state => ({ ...state,\n          messages: [...state.messages, messages]\n        }));\n      }\n    };\n\n    this.Greeting = () => {\n      const message = this.createChatBotMessage(`Hi`, {\n        withAvatar: true\n      });\n      this.addMessageToBotState(message);\n    };\n\n    this.Tools = () => {\n      const message = this.createChatBotMessage(`we provides this much features`, {\n        withAvatar: true,\n        widget: \"Tools\"\n      });\n      this.addMessageToBotState(message);\n    };\n\n    this.EnrollmentNumber = () => {\n      const message = this.createChatBotMessage(`enter your information for generate enrollment no.`, {\n        withAvatar: true,\n        widget: \"EnrollmentNo\"\n      });\n      this.addMessageToBotState(message);\n    };\n\n    this.WebHandler = () => {\n      const messages = this.createChatBotMessage(`cources for web development:`, {\n        withAvatar: true,\n        widget: \"WebDevelopment\"\n      });\n      this.addMessageToBotState(messages);\n    };\n\n    this.SoftwareHandler = () => {\n      const messages = this.createChatBotMessage(`cources for software development:`, {\n        withAvatar: true,\n        widget: \"SoftwareDevelopment\"\n      });\n      this.addMessageToBotState(messages);\n    };\n\n    this.handleDefault = () => {\n      const message = this.createChatBotMessage(\"How can I help?\", {\n        withAvatar: true,\n        widget: \"Tools\"\n      });\n      this.addMessageToBotState(message);\n    };\n\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  } //method for add message in our chatbot\n\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/chatbot/chatbot/src/ActionProvider.jsx"],"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","createClientMessage","addMessageToBotState","messages","Array","isArray","setState","state","Greeting","message","withAvatar","Tools","widget","EnrollmentNumber","WebHandler","SoftwareHandler","handleDefault"],"mappings":"AAAA,MAAMA,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,oBAAD,EAAuBC,YAAvB,EAAqCC,mBAArC,EAA0D;AAAA,SAMrEC,oBANqE,GAM7CC,QAAD,IAAc;AACnC,UAAIC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAJ,EAA6B;AAC3B,aAAKG,QAAL,CAAeC,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBJ,UAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoB,GAAGA,QAAvB;AAFc,SAAZ,CAAd;AAID,OALD,MAKO;AACL,aAAKG,QAAL,CAAeC,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBJ,UAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBA,QAApB;AAFc,SAAZ,CAAd;AAID;AACF,KAlBoE;;AAAA,SAqBrEK,QArBqE,GAqB1D,MAAM;AACf,YAAMC,OAAO,GAAG,KAAKV,oBAAL,CAA2B,IAA3B,EAAgC;AAC9CW,QAAAA,UAAU,EAAE;AADkC,OAAhC,CAAhB;AAGA,WAAKR,oBAAL,CAA0BO,OAA1B;AACD,KA1BoE;;AAAA,SA6BrEE,KA7BqE,GA6B7D,MAAM;AACZ,YAAMF,OAAO,GAAG,KAAKV,oBAAL,CACb,gCADa,EAEd;AACEW,QAAAA,UAAU,EAAE,IADd;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAFc,CAAhB;AAOA,WAAKV,oBAAL,CAA0BO,OAA1B;AACD,KAtCoE;;AAAA,SAyCrEI,gBAzCqE,GAyClD,MAAM;AACvB,YAAMJ,OAAO,GAAG,KAAKV,oBAAL,CACb,oDADa,EAEd;AACEW,QAAAA,UAAU,EAAE,IADd;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAFc,CAAhB;AAOA,WAAKV,oBAAL,CAA0BO,OAA1B;AACD,KAlDoE;;AAAA,SAqDrEK,UArDqE,GAqDxD,MAAM;AACjB,YAAMX,QAAQ,GAAG,KAAKJ,oBAAL,CAA2B,8BAA3B,EAA0D;AACzEW,QAAAA,UAAU,EAAE,IAD6D;AAEzEE,QAAAA,MAAM,EAAE;AAFiE,OAA1D,CAAjB;AAKA,WAAKV,oBAAL,CAA0BC,QAA1B;AACD,KA5DoE;;AAAA,SA+DrEY,eA/DqE,GA+DnD,MAAM;AACtB,YAAMZ,QAAQ,GAAG,KAAKJ,oBAAL,CACd,mCADc,EAEf;AAAEW,QAAAA,UAAU,EAAE,IAAd;AAAoBE,QAAAA,MAAM,EAAE;AAA5B,OAFe,CAAjB;AAIA,WAAKV,oBAAL,CAA0BC,QAA1B;AACD,KArEoE;;AAAA,SAwErEa,aAxEqE,GAwErD,MAAM;AACpB,YAAMP,OAAO,GAAG,KAAKV,oBAAL,CAA0B,iBAA1B,EAA6C;AAC3DW,QAAAA,UAAU,EAAE,IAD+C;AAE3DE,QAAAA,MAAM,EAAE;AAFmD,OAA7C,CAAhB;AAIA,WAAKV,oBAAL,CAA0BO,OAA1B;AACD,KA9EoE;;AACnE,SAAKV,oBAAL,GAA4BA,oBAA5B;AACA,SAAKO,QAAL,GAAgBN,YAAhB;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACD,GALkB,CAMnB;;;AANmB;;AAkFrB,eAAeJ,cAAf","sourcesContent":["class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n  //method for add message in our chatbot\n  addMessageToBotState = (messages) => {\n    if (Array.isArray(messages)) {\n      this.setState((state) => ({\n        ...state,\n        messages: [...state.messages, ...messages],\n      }));\n    } else {\n      this.setState((state) => ({\n        ...state,\n        messages: [...state.messages, messages],\n      }));\n    }\n  };\n\n  //simple greeting which return simple message\n  Greeting = () => {\n    const message = this.createChatBotMessage(`Hi`, {\n      withAvatar: true,\n    });\n    this.addMessageToBotState(message);\n  };\n\n  //use tools widget, return button and action doing\n  Tools = () => {\n    const message = this.createChatBotMessage(\n      `we provides this much features`,\n      {\n        withAvatar: true,\n        widget: \"Tools\",\n      }\n    );\n    this.addMessageToBotState(message);\n  };\n\n  //for enrollment no widget , use of form and submission of event\n  EnrollmentNumber = () => {\n    const message = this.createChatBotMessage(\n      `enter your information for generate enrollment no.`,\n      {\n        withAvatar: true,\n        widget: \"EnrollmentNo\",\n      }\n    );\n    this.addMessageToBotState(message);\n  };\n\n  //display list using help of states array\n  WebHandler = () => {\n    const messages = this.createChatBotMessage(`cources for web development:`, {\n      withAvatar: true,\n      widget: \"WebDevelopment\",\n    });\n\n    this.addMessageToBotState(messages);\n  };\n\n  // display list using help of data array provided in widget\n  SoftwareHandler = () => {\n    const messages = this.createChatBotMessage(\n      `cources for software development:`,\n      { withAvatar: true, widget: \"SoftwareDevelopment\" }\n    );\n    this.addMessageToBotState(messages);\n  };\n\n  //default handler if you not found any mathes\n  handleDefault = () => {\n    const message = this.createChatBotMessage(\"How can I help?\", {\n      withAvatar: true,\n      widget: \"Tools\",\n    });\n    this.addMessageToBotState(message);\n  };\n}\n\nexport default ActionProvider;\n"]},"metadata":{},"sourceType":"module"}