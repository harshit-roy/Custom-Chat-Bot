{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\chatbot\\\\chatbot\\\\src\\\\widgets\\\\WeatherInfo.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\"; //http://api.openweathermap.org/data/2.5/weather?q=${name}&appid=54dadd0dc2a3fe8d31eb9d376a84c24d\n//http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&appid=54dadd0dc2a3fe8d31eb9d376a84c24d\n//defination  of WeatherInfo widget\n//all the mathod define in actionprovider and all states of widget are passed in props\n//you can use all fuunction and state with the help of props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherInfo = props => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [city, setcity] = useState();\n  useEffect(() => {\n    const fetchApi = async () => {\n      console.log(city);\n      const url = `http://api.weatherapi.com/v1/current.json?key=6db8b9619d9d4bddb0e155940213004&q=${city}&aqi=yes`;\n      const response = await fetch(url);\n      const resJSON = await response.json();\n      setData(resJSON);\n      console.log(data);\n    };\n\n    fetchApi();\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"city name\",\n      type: \"text\",\n      name: \"cityname\",\n      className: \"text-center\",\n      value: city,\n      onChange: event => {\n        setcity(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data ? !data.error ? /*#__PURE__*/_jsxDEV(Card, {\n        className: \"my-3\",\n        style: {\n          maxWidth: 345,\n          border: \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Country:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this), data.location.country, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), data.location.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Temp:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this), data.current.temp_c, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Wind:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this), data.current.wind_kph, \" kph \", data.current.wind_dir]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Local Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this), data.location.localtime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"data not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"data not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WeatherInfo, \"+6jHaxp5yLLPkErCTE2xuOiL6B8=\");\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/chatbot/chatbot/src/widgets/WeatherInfo.jsx"],"names":["React","useEffect","useState","TextField","Card","CardActionArea","CardContent","Typography","WeatherInfo","props","data","setData","city","setcity","fetchApi","console","log","url","response","fetch","resJSON","json","event","target","value","error","maxWidth","border","fontWeight","location","country","region","current","temp_c","wind_kph","wind_dir","localtime"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//http://api.openweathermap.org/data/2.5/weather?q=${name}&appid=54dadd0dc2a3fe8d31eb9d376a84c24d\n//http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&appid=54dadd0dc2a3fe8d31eb9d376a84c24d\n//defination  of WeatherInfo widget\n//all the mathod define in actionprovider and all states of widget are passed in props\n//you can use all fuunction and state with the help of props\nconst WeatherInfo = (props) => {\n  const [data, setData] = useState(null);\n  const [city, setcity] = useState();\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      console.log(city);\n      const url = `http://api.weatherapi.com/v1/current.json?key=6db8b9619d9d4bddb0e155940213004&q=${city}&aqi=yes`;\n      const response = await fetch(url);\n      const resJSON = await response.json();\n      setData(resJSON);\n      console.log(data);\n    };\n    fetchApi();\n  }, [city]);\n\n  return (\n    <>\n      <TextField\n        id=\"standard-basic\"\n        label=\"city name\"\n        type=\"text\"\n        name=\"cityname\"\n        className=\"text-center\"\n        value={city}\n        onChange={(event) => {\n          setcity(event.target.value);\n        }}\n      />\n\n      <div>\n        {data ? (\n          !data.error ? (\n            <Card className=\"my-3\" style={{ maxWidth: 345, border: \"block\" }}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    <h4>{city}</h4>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <h5>\n                      <span style={{ fontWeight: \"bold\" }}>Country:</span>\n                      {data.location.country}{\" \"}\n                      <span style={{ fontWeight: \"bold\" }}>Region:</span>\n                      {data.location.region}\n                    </h5>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <h6>\n                      <span style={{ fontWeight: \"bold\" }}>Temp:</span>\n                      {data.current.temp_c}°C\n                    </h6>\n                    <h6>\n                      <span style={{ fontWeight: \"bold\" }}>Wind:</span>\n                      {data.current.wind_kph} kph {data.current.wind_dir}\n                    </h6>\n                    <h6>\n                      <span style={{ fontWeight: \"bold\" }}>Local Time:</span>\n                      {data.location.localtime}\n                    </h6>\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ) : (\n            <h3>data not found</h3>\n          )\n        ) : (\n          <h3>data not found</h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default WeatherInfo;\n"]},"metadata":{},"sourceType":"module"}